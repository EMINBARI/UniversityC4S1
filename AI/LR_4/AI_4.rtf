{\rtf1\ansi\ansicpg1251\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 (defvar *database* ())\
(defvar dbFileName "lr3_db.dat")\
\
(defun Insert(fio group MATH PHYS HIST REFCT OOP)(\
	PUSH (LIST :FIO fio :GROUP group :PERFOMANCE (LIST :MATH MATH :PHYS PHYS :HIST HIST :REFCT REFCT :OOP OOP)) *database* \
))\
\
(defun ShowDb()\
	(format t "~%~\{ ~\{~a:~12t~a ~\}~%~\}" *database*)\
)\
\
(defun SaveToFile(fileName)(\
	with-open-file (out fileName :if-does-not-exist :create :direction :output :if-exists :supersede)\
		(with-standard-io-syntax (print *database* out))\
))\
\
(defun ConnectToFile(fileName)\
        (setf *database* ())\
        (with-open-file (in fileName :direction :input)\
		(with-standard-io-syntax (setf *database* (read in))))\
)\
\
(defun fio-selector(fio)\
	#'(lambda(x) (equal (getf x :FIO) fio))\
)\
\
(defun FirstOrDefaul(selector-func)(\
	remove-if-not selector-func *database*\
))\
\
(defun Update(selector-func &KEY group MATH PHYS HIST REFCT OOP)\
	(setf *database* \
		(mapcar #'(lambda (x)\
                    (when (funcall selector-func x)\
                        (if group (setf (getf x :group) group))\
                        (if (OR MATH PHYS HIST REFCT OOP) \
                        	;(lambda(perfomance)())\
								(SETF (GETF x :PERFOMANCE) \
									(LIST \
										:MATH (if (not (equal MATH nil)) MATH (GETF (GETF x :PERFOMANCE) :MATH))\
										:PHYS (if (not (equal PHYS nil)) PHYS (GETF (GETF x :PERFOMANCE) :PHYS))\
										:HIST (if (not (equal HIST nil)) HIST (GETF (GETF x :PERFOMANCE) :HIST))\
										:AIP (if (not (equal REFCT nil)) AIP (GETF (GETF x :PERFOMANCE) :AIP))\
										:LITR (if (not (equal OOP nil)) LITR (GETF (GETF x :PERFOMANCE) :LITR))\
									)\
								)\
                        )\
                    )\
				x) \
				*database*)\
	)\
)\
\
(defun PrintAllWith4And5()\
    (let ((tempList (remove-if-not #'(lambda(x)(\
					OR (MEMBER 4 (GETF x :PERFOMANCE)) (MEMBER 5 (GETF x :PERFOMANCE)))\
				) *database*))\
          )\
        (IF (null tempList) (PRINT "\uc0\u1071  \u1053 \u1048 \u1063 \u1045 \u1043 \u1054  \u1053 \u1045  \u1053 \u1040 \u1064 \u1045 \u1051 ") \
                (MAPCAR #'(lambda(x)(format t "~%~\{~12t ~a~\}" (LIST (GETF x :FIO) (GETF x :GROUP)))) tempList)\
        )\
    )\
)\
\
\
(defun match (p d)\
	(cond \
		((and (null p) (null d)) t)\
		\
		((and (null d) (equal (car p) '$) (null (cdr p))) t)\
		((or (null p) (null d)) nil)\
		((or (equal (car p) '?) (equal (car p) (car d))) (match (cdr p) (cdr d)))\
		((equal (car p) '$)\
			(cond\
				((match (cdr p) d) t)\
				((match p (cdr d)) t)\
			))\
		((and (not (atom (car p))) (not (atom (car d))) (match (car p) (car d))) (match (cdr p) (cdr d)))\
        ((and (atom (car p)) (equal (car-letter (car p)) #\\?) (match (cdr p) (cdr d))) (set (cdr-name (car p)) (car d)) t)\
	)\
)\
\
\
(defun get-matches(p db)\
    (cond\
           ((null db) nil)\
           ((match p (car db)) (cons (car db) (get-matches p (cdr db))))\
           (t (get-matches p (cdr db)))\
    ) \
)\
\
(defun car-letter (x) (if (not (numberp x)) (car (coerce (string x) 'list))))\
\
(defun cdr-name (x) (intern (coerce (cdr (coerce (string x) 'list)) 'string)))\
\
(defun getValuesList(propLst)\
    (let (result (number 0))\
        (DOLIST (temp (reverse propLst) result)\
             (IF (evenp number) (setq result (cons temp result)))\
             (setq number (+ number 1))\
         )\
    )\
)\
\
(defun average(lst)\
    (when lst\
            (FLOAT (/ (apply #'+ lst) (length lst)))\
    )\
)\
\
(defun dialog(fact)\
    (cond\
        ((match '($ \uc0\u1074 \u1089 \u1077 \u1093  $ \u1086 \u1090 \u1083 \u1080 \u1095 \u1085 \u1080 \u1082 \u1086 \u1074  $) fact)(format t "\u1071  \u1085 \u1072 \u1096 \u1077 \u1083  \u1089 \u1087 \u1080 \u1089 \u1086 \u1082  \u1091 \u1084 \u1085 \u1080 \u1082 \u1086 \u1074 : ~a ~%" (get-matches '($ ($ :MATH 5 :PHYS 5 :HIST 5 :REFCT 5 :OOP 5 $) $) *database*)))\
        ((match '($ \uc0\u1080 \u1085 \u1092 \u1086 \u1088 \u1084 \u1072 \u1094 \u1080 \u1102  $ \u1087 \u1086  \u1092 \u1072 \u1084 \u1080 \u1083 \u1080 \u1080  ?FIO $) fact) (format t "\u1044 \u1072 \u1085 \u1085 \u1099 \u1077  \u1089 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1072 : ~a ~%" (get-matches (LIST '$ :FIO FIO '$) *database*)))\
        ((match '($ \uc0\u1086 \u1094 \u1077 \u1085 \u1082 \u1080  $ \u1087 \u1086  \u1092 \u1072 \u1084 \u1080 \u1083 \u1080 \u1080  ?FIO $) fact)(format t "\u1042 \u1086 \u1090  \u1086 \u1094 \u1077 \u1085 \u1082 \u1080  \u1080 \u1089 \u1082 \u1086 \u1084 \u1086 \u1075 \u1086  \u1089 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1072 : ~a ~%" (GETF (car (get-matches (LIST '$ :FIO FIO '$) *database*)) :PERFOMANCE)) )\
        ((match '($ ?RANK \uc0\u1087 \u1086  \u1092 \u1080 \u1079 \u1080 \u1082 \u1077  $) fact) (format t "\u1040 \u1076 \u1077 \u1087 \u1090 \u1099  \u1069 \u1081 \u1085 \u1096 \u1090 \u1077 \u1081 \u1085 \u1072 : ~a ~%" (get-matches (LIST '$ (LIST '$ :PHYS RANK '$) '$) *database*)))\
        (\
             (and (match '($ \uc0\u1089 \u1088 \u1077 \u1076 \u1085 \u1080 \u1081  \u1073 \u1072 \u1083  $ \u1087 \u1086  \u1092 \u1072 \u1084 \u1080 \u1083 \u1080 \u1080  ?FIO $) fact) (not (null (get-matches (LIST '$ :FIO FIO '$) *database*)))) \
                    (format t "\uc0\u1057 \u1088 \u1077 \u1076 \u1080 \u1085 \u1080 \u1081  \u1073 \u1072 \u1083  \u1101 \u1090 \u1086 \u1075 \u1086  \u1089 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1072 : ~a ~%" (average (getValuesList (GETF (car (get-matches (LIST '$ :FIO FIO '$) *database*)) :PERFOMANCE))))\
                     ;(print (getValuesList (GETF (car (get-matches (LIST '$ :FIO FIO '$) *database*)) :PERFOMANCE)))\
        )\
        (t (print "\uc0\u1052 \u1054 \u1071  \u1058 \u1042 \u1054 \u1071  \u1053 \u1045  \u1055 \u1054 \u1053 \u1048 \u1052 \u1040 \u1045 \u1058 "))\
    )\
)\
\
(Insert '\uc0\u1057 \u1080 \u1084 \u1087 \u1089 \u1086 \u1085  '\u1048 \u1057 -42 5 4 3 2 1 )\
(Insert '\uc0\u1043 \u1077 \u1081 \u1090 \u1089  '\u1048 \u1057 -42 5 5 5 5 5 )\
(Insert '\uc0\u1052 \u1072 \u1089 \u1082  '\u1048 \u1057 -42 5 4 4 3 5 )\
(Insert '\uc0\u1044 \u1072 \u1084 \u1073 \u1083 \u1076 \u1086 \u1088  '\u1048 \u1057 -42 5 4 4 2 2 )\
(Insert '\uc0\u1044 \u1078 \u1086 \u1073 \u1089  '\u1048 \u1057 -42 5 2 4 2 2 )\
\
(setq fact '(\uc0\u1085 \u1072 \u1081 \u1090 \u1080  \u1074 \u1089 \u1077 \u1093  \u1086 \u1090 \u1083 \u1080 \u1095 \u1085 \u1080 \u1082 \u1086 \u1074 ))\
(format t "~\{ ~a~\} ~%" fact )\
(dialog fact)\
(format t "~%~%")\
\
(setq fact '(\uc0\u1087 \u1086 \u1082 \u1072 \u1078 \u1080  \u1089 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1086 \u1074  \u1089  \u1086 \u1094 \u1077 \u1085 \u1082 \u1072 \u1084 \u1080  5 \u1087 \u1086  \u1092 \u1080 \u1079 \u1080 \u1082 \u1077 ))\
(format t "~\{ ~a~\} ~%" fact )\
(dialog fact)\
(format t "~%~%")\
\
(setq fact '(\uc0\u1085 \u1072 \u1081 \u1076 \u1080  \u1080 \u1085 \u1092 \u1086 \u1088 \u1084 \u1072 \u1094 \u1080 \u1102  \u1089 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1072  \u1087 \u1086  \u1092 \u1072 \u1084 \u1080 \u1083 \u1080 \u1080  \u1057 \u1080 \u1084 \u1087 \u1089 \u1086 \u1085 ))\
(format t "~\{ ~a~\} ~%" fact )\
(dialog fact)\
(format t "~%~%")\
\
(setq fact '(\uc0\u1085 \u1072 \u1081 \u1076 \u1080  \u1086 \u1094 \u1077 \u1085 \u1082 \u1080  \u1089 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1072  \u1087 \u1086  \u1092 \u1072 \u1084 \u1080 \u1083 \u1080 \u1080  \u1044 \u1072 \u1084 \u1073 \u1083 \u1076 \u1086 \u1088 ))\
(format t "~\{ ~a~\} ~%" fact )\
(dialog fact)\
(format t "~%~%")\
\
(setq fact '(\uc0\u1087 \u1086 \u1082 \u1072 \u1078 \u1080  \u1089 \u1088 \u1077 \u1076 \u1085 \u1080 \u1081  \u1073 \u1072 \u1083  \u1089 \u1090 \u1091 \u1076 \u1077 \u1085 \u1090 \u1072  \u1087 \u1086  \u1092 \u1072 \u1084 \u1080 \u1083 \u1080 \u1080  \u1044 \u1078 \u1086 \u1073 \u1089 ))\
(format t "~\{ ~a~\} ~%" fact )\
(dialog fact)\
(format t "~%~%")\
\
(setf *database* nil)\
}